<?xml version="1.0"?>
<!-- 
/*
 * Copyright 2001-2004 The Apache Software Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!-- set default severity -->
    <property name="severity" value="warning"/>

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for duplicate code                           -->
    <!-- See http://checkstyle.sf.net/config_duplicates.html -->
    <module name="StrictDuplicateCode">
      <property name="min" value="19"/>
    </module>

    <module name="TreeWalker">

        <property name="cacheFile" value="${checkstyle.cache.file}"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
        </module>


        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName">
          <property name="format" value="^(log)|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
          <property name="severity" value="error"/>
        </module>
        <module name="LocalVariableName">
            <property name="severity" value="error"/>
        </module>
        <module name="MemberName">
            <property name="severity" value="error"/>
        </module>
        <module name="MethodName">
            <property name="severity" value="error"/>
        </module>
        <module name="PackageName">
            <property name="severity" value="error"/>
        </module>
        <module name="ParameterName">
            <property name="severity" value="error"/>
        </module>
        <module name="StaticVariableName">
            <property name="severity" value="error"/>
        </module>
        <module name="TypeName">
            <property name="severity" value="error"/>
        </module>

        <!-- Checks for Headers                              -->
        <!-- See http://checkstyle.sf.net/config_header.html -->
        <module name="Header">
            <!-- The follow property value demonstrates the ability     -->
            <!-- to have access to ANT properties. In this case it uses -->
            <!-- the ${basedir} property to allow Checkstyle to be run  -->
            <!-- from any directory within a project. See property      -->
            <!-- expansion,                                             -->
            <!-- http://checkstyle.sf.net/config.html#properties        -->
            <!-- <property                                              -->
            <!--     name="headerFile"                                  -->
            <!--     value="${basedir}/java.header"/>                   -->
            <property name="headerFile" value="${checkstyle.header.file}"/>
            <property name="severity" value="error"/>
        </module>

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport">
            <property name="severity" value="error"/>
        </module>
        <module name="IllegalImport">
            <property name="severity" value="error"/>
        </module>
        <module name="RedundantImport">
            <property name="severity" value="error"/>
        </module>
        <module name="UnusedImports">
            <property name="severity" value="error"/>
        </module>
        <module name="ImportOrder">
            <property name="groups" value="java,javax,junit,org,com"/>
            <property name="ordered" value="false"/>
            <property name="separated" value="true"/>
            <property name="caseSensitive" value="true"/>
        </module>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="FileLength"/>
        <module name="LineLength">
          <property name="max" value="100"/>
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly">
          <property name="option" value="eol"/>
        </module>
        
        <module name="NeedBraces"/>
        <module name="RightCurly"/>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidInlineConditionals"/>
        <module name="CovariantEquals">
            <property name="severity" value="error"/>
        </module>
        <module name="DeclarationOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="DefaultComesLast">
            <property name="severity" value="error"/>
        </module>
        <module name="DoubleCheckedLocking">
            <property name="severity" value="error"/>
        </module>
        <module name="DeclarationOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="DefaultComesLast">
            <property name="severity" value="error"/>
        </module>
        <module name="DoubleCheckedLocking">
            <property name="severity" value="error"/>
        </module>
        <module name="FallThrough"/>
        <module name="HiddenField">
            <property name="severity" value="error"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="IllegalCatch">
            <property name="severity" value="error"/>
            <property name="illegalClassNames" value="java.lang.Throwable,java.lang.RuntimeException"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="severity" value="error"/>
        </module>
        <module name="IllegalTokenText">
            <property name="severity" value="error"/>
        </module>
        <module name="IllegalType">
            <property name="severity" value="error"/>
        </module>
        <module name="InnerAssignment">
            <property name="severity" value="error"/>
        </module>
        <module name="JUnitTestCase">
            <property name="severity" value="error"/>
        </module>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault">
            <property name="severity" value="error"/>
        </module>
        <module name="MultipleVariableDeclarations">
            <property name="severity" value="error"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="4"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="PackageDeclaration">
            <property name="severity" value="error"/>
        </module>
        <module name="ParameterAssignment">
            <property name="severity" value="error"/>
        </module>
        <module name="RedundantThrows"/>
        <module name="SimplifyBooleanExpression">
            <property name="severity" value="error"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="error"/>
        </module>
        <module name="StringLiteralEquality">
            <property name="severity" value="error"/>
        </module>
        <module name="SuperFinalize">
            <property name="severity" value="error"/>
        </module>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- module name="DesignForExtension"/-->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Checks code metrics                              -->
        <!-- See http://checkstyle.sf.net/config_metrics.html -->
        <module name="BooleanExpressionComplexity">
            <property name="severity" value="info"/>
            <property name="max" value="3"/>
        </module>
        <module name="ClassDataAbstractionCoupling">
            <property name="severity" value="info"/>
            <property name="max" value="10"/>
        </module>        
        <module name="ClassFanOutComplexity">
            <property name="severity" value="info"/>
            <property name="max" value="20"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="severity" value="info"/>
            <property name="max" value="10"/>
        </module>
        <module name="NPathComplexity">
            <property name="severity" value="info"/>
            <property name="max" value="200"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!-- module name="FinalParameters"/-->
        <!-- module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module-->
        <module name="GenericIllegalRegexp">
            <property name="format" value="generated comment|auto-generated|template for this generated file|template for this generated type"/>
            <property name="ignoreCase" value="true"/>
            <property name="message" value="Generated Comment Found. Please enter a real one."/>
            <property name="severity" value="error"/>
        </module>
        <module name="Indentation"/>
        <module name="TodoComment"/>
        <module name="UncommentedMain"/>
        <module name="UpperEll"/>

        <!-- Checks for usage                               -->
        <!-- See http://checkstyle.sf.net/config_usage.html -->
        <module name="usage.OneMethodPrivateField">
            <property name="ignoreFormat" value="Temp$"/>
        </module>
        <module name="usage.UnusedLocalVariable">
            <property name="severity" value="error"/>
        </module>
        <module name="usage.UnusedPrivateField">
            <property name="ignoreFormat" value="LOG"/>
            <property name="severity" value="error"/>
        </module>

    </module>

</module>
